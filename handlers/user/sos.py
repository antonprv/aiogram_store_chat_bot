from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, \
    InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import Message, CallbackQuery, ChatActions
from aiogram.utils.callback_data import CallbackData
from uuid import uuid4

from keyboards.default.markups import all_right_message, cancel_message
from keyboards.default.markups import submit_markup
from states import SosState
from loader import dp, db, bot
from data.config import QUESTIONS_LIMIT
from filters import IsUser
from keyboards.inline.sos import *
from utils.no_emoji import strip_emojis


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é /help
@dp.message_handler(commands='help')
async def cmd_help(message: Message):
    cid = message.chat.id
    limit: int = len(db.fetchall('SELECT * FROM questions'
                                 ' WHERE cid = ?', (cid,)))
    if limit is not None:
        if limit < 3:
            text = (f'–ï—â—ë –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å–æ–≤:'
                    f' <b>{QUESTIONS_LIMIT - limit}</b>.')
        else:
            text = (f'–í—ã –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã. '
                    f'–ú–∞–∫—Å–∏–º—É–º - <b>{QUESTIONS_LIMIT}</b>')
    else:
        text = f'–í—ã –µ—â—ë –Ω–µ –∑–∞–¥–∞–≤–∞–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤.'

    markup = ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
    markup.add(question_ask)
    markup.add(question_show_answers)

    await message.answer(text='–ß–µ–º –º–æ–∂–µ–º –≤–∞–º –ø–æ–º–æ—á—å?', reply_markup=markup)
    await bot.send_message(chat_id=cid, text=text)


@dp.message_handler(text=question_ask)
async def question_cmd_ask(message: Message):
    await SosState.question.set()
    await message.answer(
        '–í —á–µ–º —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã? –û–ø–∏—à–∏—Ç–µ –∫–∞–∫ –º–æ–∂–Ω–æ –¥–µ—Ç–∞–ª—å–Ω–µ–µ'
        ' –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∞–º –æ—Ç–≤–µ—Ç–∏—Ç.',
        reply_markup=ReplyKeyboardRemove())


# –ü–æ–¥—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ question –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø—Ä–æ–∫—Å–∏.
# –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é.
@dp.message_handler(state=SosState.question)
async def process_question(message: Message, state: FSMContext):
    async with state.proxy() as data:
        data['question'] = strip_emojis(message.text)

        await message.answer('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å—ë –≤–µ—Ä–Ω–æ.',
                             reply_markup=submit_markup())
        await SosState.next()


# –ü–æ–¥—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
@dp.message_handler(
    lambda message: message.text not in [cancel_message, all_right_message],
    state=SosState.submit)
async def process_price_invalid(message: Message):
    await message.answer('–¢–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ.')


# –ü–æ–¥—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É —Å –æ—Ç–º–µ–Ω–æ–π, –∏ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç.
# –¢–æ–ª—å–∫–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ –≤—ã–±—Ä–æ—Å–∏—Ç –Ω–∞ –¥–µ—Ñ–æ–ª—Ç.
@dp.message_handler(text=cancel_message, state=SosState.submit)
async def process_cancel(message: Message, state: FSMContext):
    await message.answer('–û—Ç–º–µ–Ω–µ–Ω–æ!', reply_markup=ReplyKeyboardRemove())
    await state.finish()


# –ü—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–∏—à–µ—Ç –≤ –±–¥ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏.
@dp.message_handler(text=all_right_message, state=SosState.submit)
async def process_submit(message: Message, state: FSMContext):
    cid = message.chat.id

    # –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç
    # –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤. –¢.–µ, –º–∞–∫—Å–∏–º—É–º –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞ - 1.
    if (len(db.fetchall('SELECT * FROM questions WHERE cid = ?', (cid,)))
            <= QUESTIONS_LIMIT):
        async with state.proxy() as data:
            qid = str(uuid4())[:8]
            db.query('INSERT INTO questions VALUES (?, ?, ?, ?)',
                     (cid, qid, data['question'], '–ø–æ–∫–∞ –±–µ–∑ –æ—Ç–≤–µ—Ç–∞'))

        await message.answer('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!',
                             reply_markup=ReplyKeyboardRemove())
    else:
        await message.answer(
            '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞–≤–∞–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.',
            reply_markup=ReplyKeyboardRemove())

    await state.finish()


# –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –±–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å—Ç—Ä–æ–∏—Ç—Å—è –∏–∑ –∫–æ–ª–æ–Ω–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –≤–æ–ø—Ä–æ—Å.


@dp.message_handler(text=question_show_answers)
async def delete_all_button(message: Message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
    markup.add(delete_all_btn)
    await message.answer('–í—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã:', reply_markup=markup)
    await show_answers(message)


async def show_answers(message: Message):
    await bot.send_chat_action(chat_id=message.chat.id,
                               action=ChatActions.TYPING)

    questions = db.fetchall('SELECT * FROM questions WHERE cid = ?',
                            (message.chat.id,))

    if len(questions) > 0:
        for _, qid, question, answer in questions:
            text = (f'–í–æ–ø—Ä–æ—Å: {question}\n\n'
                    f'–û—Ç–≤–µ—Ç: {answer}')

            await message.answer(text=text,
                                 reply_markup=question_delete_markup(qid=qid))
    else:
        await message.answer('–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ ü•∫')


@dp.callback_query_handler(question_cb.filter(action='remove'))
async def question_delete(query: CallbackQuery, callback_data: dict):
    qid = callback_data['qid']

    db.query('DELETE FROM questions WHERE qid = ?',
             (qid,))
    await query.message.answer(text='–í–æ–ø—Ä–æ—Å —É–¥–∞–ª—ë–Ω!')


@dp.message_handler(text=delete_all_btn)
async def delete_all_confirm(message: Message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
    markup.add('–î–∞, —É–¥–∞–ª–∏—Ç–µ –≤—Å—ë.')
    await message.answer(text='–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=markup)


@dp.message_handler(text='–î–∞, —É–¥–∞–ª–∏—Ç–µ –≤—Å—ë.')
async def delete_all(message: Message):
    db.query('DELETE FROM questions WHERE cid = ?',
             (message.chat.id,))
    await message.answer(text='–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã —É–¥–∞–ª–µ–Ω—ã!',
                         reply_markup=ReplyKeyboardRemove())
